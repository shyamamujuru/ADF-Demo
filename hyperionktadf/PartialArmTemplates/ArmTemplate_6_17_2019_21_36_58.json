{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory Name",
			"defaultValue": "hyperionktadf"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Customer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DataFlow",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "StartAudit",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureDataLakeStoreWriteSetting"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSetting",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "TempSource",
								"type": "DatasetReference",
								"parameters": {
									"TableName": {
										"value": "@pipeline().parameters.TableName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "TempSink",
								"type": "DatasetReference",
								"parameters": {
									"Folder": {
										"value": "@pipeline().parameters.DestinationFolder",
										"type": "Expression"
									},
									"FileName": {
										"value": "@Concat(pipeline().parameters.FileName,FormatDatetime(UTCNow(),'yyyyMMddhhmmss'))",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "StartAudit",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[Control].[StartAudit]",
								"storedProcedureParameters": {
									"PipelineID": {
										"type": "Guid",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"PipelineName": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"TableName": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.TableName",
											"type": "Expression"
										}
									}
								}
							},
							"dataset": {
								"referenceName": "AzureSqldatabase",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "EndAudit",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "DataFlow",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"storedProcedureName": "[[Control].[EndAudit]",
							"storedProcedureParameters": {
								"AuditID": {
									"value": {
										"value": "@activity('StartAudit').output.FirstRow.AuditID",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"outputFilePath": {
									"value": {
										"value": "@Concat(pipeline().parameters.DestinationFolder,pipeline().parameters.FileName,FormatDatetime(UTCNow(),'yyyyMMddhhmm'))",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "EndAudit",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"url": "https://prod-08.centralindia.logic.azure.com:443/workflows/49f999d633724a5ba316d774356c0e78/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=svCnREYDg6VOHJktwY59XXjjqmzUSbrBSFJa2m29Zt0",
							"method": "POST",
							"body": {
								"DataFactoryName": "Customer",
								"EmailTo": "lokesh.althi@imaginea.com",
								"ErrorMessage": "failed",
								"PipelineName": "Customer",
								"Subject": "Pipe line failed"
							}
						}
					}
				],
				"parameters": {
					"TableName": {
						"type": "string",
						"defaultValue": "SalesLT.Customer"
					},
					"DestinationFolder": {
						"type": "string",
						"defaultValue": "Template\\Customer"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "Customer"
					}
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/MasterPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetPipelineList",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Select * from [Control].[PilelineList] WHERE isactive=1"
							},
							"dataset": {
								"referenceName": "AzureSqldatabase",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetPipelineList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"typeProperties": {
							"items": {
								"value": "@activity('GetPipelineList').output.Pipelinename\n",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 2,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"typeProperties": {
										"pipeline": {
											"referenceName": "Customer",
											"type": "PipelineReference"
										},
										"waitOnCompletion": false
									}
								}
							]
						}
					}
				],
				"parameters": {
					"PipelineName": {
						"type": "object",
						"defaultValue": "product"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Customer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqldatabase1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"type": "AzureSqlTable",
				"schema": []
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqldatabase2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"type": "AzureSqlTable",
				"schema": []
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/TempSink1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStore1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Folder": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureDataLakeStoreLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().Folder",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "1",
						"type": "String"
					},
					{
						"name": "aaaa",
						"type": "String"
					},
					{
						"name": "2017-09-01 00:56:00.0000000",
						"type": "String"
					}
				]
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/TempSink2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStore1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Folder": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureDataLakeStoreLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().Folder",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "1",
						"type": "String"
					},
					{
						"name": "aaaa",
						"type": "String"
					},
					{
						"name": "2017-09-01 00:56:00.0000000",
						"type": "String"
					}
				]
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/TempSource1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string"
					}
				},
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/TempSource2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string"
					}
				},
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			}
		}
	]
}